process_data(
input_file = file_info$input_file,
output_kruskal = file_info$output_kruskal,
qqplot_path = file_info$qqplot_path
)
}
print("Kruskal-Wallis analysis completed for all datasets.")
View(file_info)
setwd("C:/Users/jacop/OneDrive/Desktop/Thesis/Data analysis/Statistics")
# Load necessary libraries
library(car)         # For Levene's test
library(agricolae)   # For LSD test
library(ggplot2)     # For QQ plots
# Read the data
data <- read.csv("combined_files\combined_high_ranks_cleaned.csv")
# Load necessary libraries
library(car)         # For Levene's test
library(agricolae)   # For LSD test
library(ggplot2)     # For QQ plots
# Read the data
data <- read.csv("combined_files/combined_high_ranks_cleaned.csv")
# Get unique ranks
ranks <- unique(data$rank)
# Initialize a text file to save outputs
sink("anova_ranks_high.txt")
# Loop through each rank
for (rank in ranks) {
# Filter data for the current rank
subset_data <- subset(data, rank == rank)
# Perform one-way ANOVA
anova_result <- aov(absorbed ~ architecture, data = subset_data)
cat("\nANOVA for Rank:", rank, "\n")
print(summary(anova_result))
# Post-hoc LSD test
lsd_test <- LSD.test(anova_result, "architecture", console=FALSE)
cat("\nLSD Test for Rank:", rank, "\n")
print(lsd_test)
# Normality test (Shapiro-Wilk test on residuals)
shapiro_test <- shapiro.test(residuals(anova_result))
cat("\nShapiro-Wilk Normality Test for Rank:", rank, "\n")
print(shapiro_test)
# Homogeneity of variances (Levene's Test)
levene_test <- leveneTest(absorbed ~ architecture, data = subset_data)
cat("\nLevene's Test for Homogeneity of Variances for Rank:", rank, "\n")
print(levene_test)
# Generate QQ plot for residuals and save as image
qqplot_filename <- paste0("qqplot_rank_", rank, ".png")
png(qqplot_filename)
qqnorm(residuals(anova_result))
qqline(residuals(anova_result))
dev.off()
cat("\n---------------------------------------------\n")
}
# Load necessary libraries
library(car)         # For Levene's test
library(agricolae)   # For LSD test
library(ggplot2)     # For QQ plots
# Read the data
data <- read.csv("combined_files/combined_high_ranks_cleaned.csv")
# Get unique ranks
ranks <- unique(data$rank)
# Initialize a text file to save outputs
sink("anova_ranks_high.txt")
# Loop through each rank
for (rank in ranks) {
# Filter data for the current rank
subset_data <- subset(data, rank == rank)
# Perform one-way ANOVA
anova_result <- aov(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nANOVA for Rank:", rank, "\n")
print(summary(anova_result))
# Post-hoc LSD test
lsd_test <- LSD.test(anova_result, "architecture", console=FALSE)
cat("\nLSD Test for Rank:", rank, "\n")
print(lsd_test)
# Normality test (Shapiro-Wilk test on residuals)
shapiro_test <- shapiro.test(residuals(anova_result))
cat("\nShapiro-Wilk Normality Test for Rank:", rank, "\n")
print(shapiro_test)
# Homogeneity of variances (Levene's Test)
levene_test <- leveneTest(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nLevene's Test for Homogeneity of Variances for Rank:", rank, "\n")
print(levene_test)
# Generate QQ plot for residuals and save as image
qqplot_filename <- paste0("qqplot_rank_", rank, ".png")
png(qqplot_filename)
qqnorm(residuals(anova_result))
qqline(residuals(anova_result))
dev.off()
cat("\n---------------------------------------------\n")
}
# Load necessary libraries
library(car)         # For Levene's test
library(agricolae)   # For LSD test
library(ggplot2)     # For QQ plots
# Read the data
data <- read.csv("combined_files/combined_high_ranks_cleaned.csv")
# Get unique ranks
ranks <- unique(data$rank)
# Initialize a text file to save outputs
sink("anova_ranks_high.txt")
# Loop through each rank
for (rank in ranks) {
# Filter data for the current rank
subset_data <- subset(data, rank == rank)
# Perform one-way ANOVA
anova_result <- aov(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nANOVA for Rank:", rank, "\n")
print(summary(anova_result))
# Post-hoc LSD test
lsd_test <- LSD.test(anova_result, "architecture", console=FALSE)
cat("\nLSD Test for Rank:", rank, "\n")
print(lsd_test)
residuals_data <- residuals(anova_result)
cat("\nNumber of Residuals for Rank:", rank, "is", length(residuals_data), "\n")
# Normality test (Shapiro-Wilk test on residuals)
#shapiro_test <- shapiro.test(residuals(anova_result))
#cat("\nShapiro-Wilk Normality Test for Rank:", rank, "\n")
#print(shapiro_test)
# Homogeneity of variances (Levene's Test)
levene_test <- leveneTest(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nLevene's Test for Homogeneity of Variances for Rank:", rank, "\n")
print(levene_test)
# Generate QQ plot for residuals and save as image
qqplot_filename <- paste0("qqplot_rank_", rank, ".png")
png(qqplot_filename)
qqnorm(residuals(anova_result))
qqline(residuals(anova_result))
dev.off()
cat("\n---------------------------------------------\n")
}
# Close the text file
sink()
# Load necessary libraries
library(car)         # For Levene's test
library(agricolae)   # For LSD test
library(ggplot2)     # For QQ plots
# Read the data
data <- read.csv("combined_files/combined_high_ranks_cleaned.csv")
# Get unique ranks
ranks <- unique(data$rank)
# Convert architecture to factor explicitly
subset_data$architecture <- as.factor(subset_data$architecture)
# Initialize a text file to save outputs
sink("anova_ranks_high.txt")
# Loop through each rank
for (rank in ranks) {
# Filter data for the current rank
subset_data <- subset(data, rank == rank)
# Perform one-way ANOVA
anova_result <- aov(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nANOVA for Rank:", rank, "\n")
print(summary(anova_result))
# Post-hoc LSD test
lsd_test <- LSD.test(anova_result, "architecture", console=FALSE)
cat("\nLSD Test for Rank:", rank, "\n")
print(lsd_test)
residuals_data <- residuals(anova_result)
cat("\nNumber of Residuals for Rank:", rank, "is", length(residuals_data), "\n")
# Normality test (Shapiro-Wilk test on residuals)
#shapiro_test <- shapiro.test(residuals(anova_result))
#cat("\nShapiro-Wilk Normality Test for Rank:", rank, "\n")
#print(shapiro_test)
# Homogeneity of variances (Levene's Test)
levene_test <- leveneTest(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nLevene's Test for Homogeneity of Variances for Rank:", rank, "\n")
print(levene_test)
# Generate QQ plot for residuals and save as image
qqplot_filename <- paste0("qqplot_rank_", rank, ".png")
png(qqplot_filename)
qqnorm(residuals(anova_result))
qqline(residuals(anova_result))
dev.off()
cat("\n---------------------------------------------\n")
}
# Close the text file
sink()
# Load necessary libraries
library(car)         # For Levene's test
library(agricolae)   # For LSD test
library(ggplot2)     # For QQ plots
# Read the data
data <- read.csv("combined_files/combined_high_ranks_cleaned.csv")
# Get unique ranks
ranks <- unique(data$rank)
# Initialize a text file to save outputs
sink("anova_ranks_high.txt")
# Loop through each rank
for (rank in ranks) {
# Filter data for the current rank
subset_data <- subset(data, data$rank == rank)
# Convert architecture to factor explicitly
subset_data$architecture <- as.factor(subset_data$architecture)
# Perform one-way ANOVA
anova_result <- aov(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nANOVA for Rank:", rank, "\n")
print(summary(anova_result))
# Post-hoc LSD test
lsd_test <- LSD.test(anova_result, "architecture", console=FALSE)
cat("\nLSD Test for Rank:", rank, "\n")
print(lsd_test)
# Normality test (Shapiro-Wilk test on residuals)
residuals_data <- residuals(anova_result)
shapiro_test <- shapiro.test(residuals_data)
cat("\nShapiro-Wilk Normality Test for Rank:", rank, "\n")
print(shapiro_test)
# Homogeneity of variances (Levene's Test)
levene_test <- leveneTest(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nLevene's Test for Homogeneity of Variances for Rank:", rank, "\n")
print(levene_test)
# Generate QQ plot for residuals and save as image
qqplot_filename <- paste0("qqplot_rank_", rank, ".png")
png(qqplot_filename)
qqnorm(residuals_data)
qqline(residuals_data)
dev.off()
cat("\n---------------------------------------------\n")
}
# Load necessary libraries
library(car)         # For Levene's test
library(agricolae)   # For LSD test
library(ggplot2)     # For QQ plots
# Read the data
data <- read.csv("combined_files/combined_high_ranks_cleaned.csv")
# Get unique ranks
ranks <- unique(data$rank)
# Initialize a text file to save outputs
sink("anova_ranks_high.txt")
# Loop through each rank
for (rank in ranks) {
# Filter data for the current rank
subset_data <- data[data$rank == rank, ]
# Convert architecture to factor explicitly
subset_data$architecture <- as.factor(subset_data$architecture)
# Perform one-way ANOVA
anova_result <- aov(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nANOVA for Rank:", rank, "\n")
print(summary(anova_result))
# Post-hoc LSD test
lsd_test <- LSD.test(anova_result, "architecture", console=FALSE)
cat("\nLSD Test for Rank:", rank, "\n")
print(lsd_test)
# Normality test (Shapiro-Wilk test on residuals)
residuals_data <- residuals(anova_result)
shapiro_test <- shapiro.test(residuals_data)
cat("\nShapiro-Wilk Normality Test for Rank:", rank, "\n")
print(shapiro_test)
# Homogeneity of variances (Levene's Test)
levene_test <- leveneTest(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nLevene's Test for Homogeneity of Variances for Rank:", rank, "\n")
print(levene_test)
# Generate QQ plot for residuals and save as image
qqplot_filename <- paste0("qqplot_rank_", rank, ".png")
png(qqplot_filename)
qqnorm(residuals_data)
qqline(residuals_data)
dev.off()
cat("\n---------------------------------------------\n")
}
# Close the text file
sink()
# Load necessary libraries
library(car)         # For Levene's test
library(agricolae)   # For LSD test
library(ggplot2)     # For QQ plots
# Read the data
data <- read.csv("combined_files/combined_high_ranks_cleaned.csv")
# Get unique ranks
ranks <- unique(data$rank)
# Initialize a text file to save formatted outputs
sink("anova_ranks_high_formatted.txt")
# Loop through each rank
for (rank in ranks) {
# Filter data for the current rank
subset_data <- data[data$rank == rank, ]
# Convert architecture to factor explicitly
subset_data$architecture <- as.factor(subset_data$architecture)
# Perform one-way ANOVA
anova_result <- aov(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
# Extract ANOVA summary
anova_summary <- summary(anova_result)[[1]]
# Print the ANOVA table in a similar format to Genstat
cat("\nAnalysis of variance\n\n")
cat("Variate: absorbedPAR_umol_m2_s1\n\n")
cat("Source of variation\td.f.\ts.s.\tm.s.\tv.r.\tF pr.\n")
cat("architecture\t", anova_summary["architecture", "Df"], "\t",
round(anova_summary["architecture", "Sum Sq"], 5), "\t",
round(anova_summary["architecture", "Mean Sq"], 5), "\t",
round(anova_summary["architecture", "F value"], 2), "\t",
ifelse(anova_summary["architecture", "Pr(>F)"] < 0.001, "<.001",
round(anova_summary["architecture", "Pr(>F)"], 3)), "\n")
cat("Residual\t", anova_summary["Residuals", "Df"], "\t",
round(anova_summary["Residuals", "Sum Sq"], 5), "\t",
round(anova_summary["Residuals", "Mean Sq"], 5), "\n")
cat("Total\t", anova_summary["Residuals", "Df"] + anova_summary["architecture", "Df"],
"\t", round(sum(anova_summary[,"Sum Sq"]), 5), "\n\n")
cat("Information summary\n\nAll terms orthogonal, none aliased.\n\n")
# Perform post-hoc LSD test
lsd_test <- LSD.test(anova_result, "architecture", console=FALSE)
# Print the significant letters from the LSD test
cat("\nBonferroni test\n\narchitecture\n\n")
lsd_groups <- lsd_test$groups
for (i in 1:nrow(lsd_groups)) {
cat(lsd_groups[i, 1], "\t", round(lsd_groups[i, 2], 3), "\t", lsd_groups[i, 3], "\n")
}
# Pairwise comparisons (LSD test output with standard errors of differences)
cat("\nStandard errors of differences of means\n\n")
comparison_matrix <- lsd_test$comparison
se_min <- round(min(comparison_matrix$std.error), 5)
se_max <- round(max(comparison_matrix$std.error), 5)
se_avg <- round(mean(comparison_matrix$std.error), 5)
cat("Minimum standard error of difference\t", se_min, "\n")
cat("Average standard error of difference\t", se_avg, "\n")
cat("Maximum standard error of difference\t", se_max, "\n\n")
# Normality test (Shapiro-Wilk test)
residuals_data <- residuals(anova_result)
shapiro_test <- shapiro.test(residuals_data)
cat("\nShapiro-Wilk Normality Test\n")
cat("W =", round(shapiro_test$statistic, 5), ", p-value =", round(shapiro_test$p.value, 5), "\n\n")
# Homogeneity of variances (Levene's Test)
levene_test <- leveneTest(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nLevene's Test for Homogeneity of Variances\n")
cat("F =", round(levene_test$"F value"[1], 2), ", p-value =", round(levene_test$"Pr(>F)"[1], 5), "\n\n")
cat("\n---------------------------------------------\n")
}
# Advanced statistics CP 5 thru 12
# This function extends the anova table that is produced
# by Anova() from the car library
# It is set to produce type II sums of squares.
# argument model: an object as produced by the lm() function
library(car)
library(tibble)
Anova_table <- function(model) {
#get the TypeII Anova table
At2<-Anova(model, Type =2)
#construct SStot and dftot from a TypeI Anova table
At1<-anova(model)
SStotal <- sum(At1[,2])
dftotal <- sum(At1[,1])
Total<-as.data.frame(cbind(SStotal, dftotal,"",""))
rownames(Total)<-"Total"
names(Total) <- names(At2)
Avtable <- rbind(At2,Total)
for (c in 1:4) {
Avtable[,c]<-as.numeric(Avtable[,c])
}
rows<-dim(Avtable)[1]
MS<-vector(length=rows)
MS<- as.numeric(Avtable[,1])/as.numeric(Avtable[,2])
Avtable <- add_column(Avtable,MS,.after=2)
return(Avtable)
}
# Load necessary libraries
library(car)         # For Levene's test
library(agricolae)   # For LSD test
library(ggplot2)     # For QQ plots
# Read the data
data <- read.csv("combined_files/combined_high_ranks_cleaned.csv")
# Get unique ranks
ranks <- unique(data$rank)
# Initialize a text file to save outputs
sink("anova_ranks_high.txt")
# Loop through each rank
for (rank in ranks) {
# Filter data for the current rank
subset_data <- data[data$rank == rank, ]
# Convert architecture to factor explicitly
subset_data$architecture <- as.factor(subset_data$architecture)
# Perform one-way ANOVA
anova_result <- aov(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nANOVA for Rank:", rank, "\n")
print(summary(anova_result))
# Post-hoc LSD test
lsd_test <- LSD.test(anova_result, "architecture", console=FALSE)
cat("\nLSD Test for Rank:", rank, "\n")
print(lsd_test)
# Normality test (Shapiro-Wilk test on residuals)
residuals_data <- residuals(anova_result)
shapiro_test <- shapiro.test(residuals_data)
cat("\nShapiro-Wilk Normality Test for Rank:", rank, "\n")
print(shapiro_test)
# Homogeneity of variances (Levene's Test)
levene_test <- leveneTest(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nLevene's Test for Homogeneity of Variances for Rank:", rank, "\n")
print(levene_test)
# Generate QQ plot for residuals and save as image
qqplot_filename <- paste0("qqplot_rank_", rank, ".png")
png(qqplot_filename)
qqnorm(residuals_data)
qqline(residuals_data)
dev.off()
cat("\n---------------------------------------------\n")
}
# Close the text file
sink()
# Advanced statistics CP 5 thru 12
# This function extends the anova table that is produced
# by Anova() from the car library
# It is set to produce type II sums of squares.
# argument model: an object as produced by the lm() function
library(car)
library(tibble)
Anova_table <- function(model) {
#get the TypeII Anova table
At2<-Anova(model, Type =2)
#construct SStot and dftot from a TypeI Anova table
At1<-anova(model)
SStotal <- sum(At1[,2])
dftotal <- sum(At1[,1])
Total<-as.data.frame(cbind(SStotal, dftotal,"",""))
rownames(Total)<-"Total"
names(Total) <- names(At2)
Avtable <- rbind(At2,Total)
for (c in 1:4) {
Avtable[,c]<-as.numeric(Avtable[,c])
}
rows<-dim(Avtable)[1]
MS<-vector(length=rows)
MS<- as.numeric(Avtable[,1])/as.numeric(Avtable[,2])
Avtable <- add_column(Avtable,MS,.after=2)
return(Avtable)
}
# Load necessary libraries
library(car)         # For Levene's test
library(agricolae)   # For LSD test
library(ggplot2)     # For QQ plots
# Read the data
data <- read.csv("combined_files/combined_high_ranks_cleaned.csv")
# Get unique ranks
ranks <- unique(data$rank)
# Initialize a text file to save outputs
sink("anova_ranks_high.txt")
# Loop through each rank
for (rank in ranks) {
# Filter data for the current rank
subset_data <- data[data$rank == rank, ]
# Convert architecture to factor explicitly
subset_data$architecture <- as.factor(subset_data$architecture)
# Perform one-way ANOVA
anova_result <- aov(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nANOVA for Rank:", rank, "\n")
summary(anova_result)
Anova_table(anova_result)
print(Anova_table)
# Post-hoc LSD test
lsd_test <- LSD.test(anova_result, "architecture", console=FALSE)
cat("\nLSD Test for Rank:", rank, "\n")
print(lsd_test)
# Normality test (Shapiro-Wilk test on residuals)
residuals_data <- residuals(anova_result)
shapiro_test <- shapiro.test(residuals_data)
cat("\nShapiro-Wilk Normality Test for Rank:", rank, "\n")
print(shapiro_test)
# Homogeneity of variances (Levene's Test)
levene_test <- leveneTest(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nLevene's Test for Homogeneity of Variances for Rank:", rank, "\n")
print(levene_test)
# Generate QQ plot for residuals and save as image
qqplot_filename <- paste0("qqplot_rank_", rank, ".png")
png(qqplot_filename)
qqnorm(residuals_data)
qqline(residuals_data)
dev.off()
cat("\n---------------------------------------------\n")
}
# Close the text file
sink()
# Load necessary libraries
library(car)         # For Levene's test
library(agricolae)   # For LSD test
library(ggplot2)     # For QQ plots
# Read the data
data <- read.csv("combined_files/combined_high_ranks_cleaned.csv")
# Get unique ranks
ranks <- unique(data$rank)
# Initialize a text file to save outputs
sink("anova_ranks_high.txt")
# Loop through each rank
for (rank in ranks) {
# Filter data for the current rank
subset_data <- data[data$rank == rank, ]
# Convert architecture to factor explicitly
subset_data$architecture <- as.factor(subset_data$architecture)
# Perform one-way ANOVA
anova_result <- aov(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nANOVA for Rank:", rank, "\n")
summary(anova_result)
extended_anova_table <- Anova_table(anova_result)
print(extended_anova_table)
# Post-hoc LSD test
lsd_test <- LSD.test(anova_result, "architecture", console=FALSE)
cat("\nLSD Test for Rank:", rank, "\n")
print(lsd_test)
# Normality test (Shapiro-Wilk test on residuals)
residuals_data <- residuals(anova_result)
shapiro_test <- shapiro.test(residuals_data)
cat("\nShapiro-Wilk Normality Test for Rank:", rank, "\n")
print(shapiro_test)
# Homogeneity of variances (Levene's Test)
levene_test <- leveneTest(absorbedPAR_umol_m2_s1 ~ architecture, data = subset_data)
cat("\nLevene's Test for Homogeneity of Variances for Rank:", rank, "\n")
print(levene_test)
# Generate QQ plot for residuals and save as image
qqplot_filename <- paste0("qqplot_rank_", rank, ".png")
png(qqplot_filename)
qqnorm(residuals_data)
qqline(residuals_data)
dev.off()
cat("\n---------------------------------------------\n")
}
# Close the text file
sink()
